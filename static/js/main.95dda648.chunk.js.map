{"version":3,"sources":["keys/timon_borter.asc","view/Home.js","view/Projects/Projects.js","routes.js","view/KeyList/KeyList.js","Router.js","view/layout/Header/Header.js","view/layout/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","role","aria-label","Component","Projects","href","routes","path","component","key","Router","BrowserRouter","map","route","i","Route","Object","assign","concat","Header","Footer","style","fontWeight","App","layout_Header_Header","src_Router","layout_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95dda648.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timon_borter.b668f0d2.asc\";","// @flow\r\nimport React, {Component} from 'react';\r\n\r\nimport './Home.scss';\r\n\r\ntype Props = { /* ... */ };\r\n\r\nclass Home extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className='Home'>\r\n        <h1>About me. <small className='text-muted'>Student, Programmer & Performance Nerd. <span role='img'\r\n                                                                                                  aria-label='rocket-icon'>&#128640;</span>\r\n        </small></h1>\r\n\r\n        <p>\r\n          I am currently working at PostFinance AG in Bern while studying computer science at BFH.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// @flow\r\nimport React, {Component} from 'react';\r\n\r\nimport './Projects.scss';\r\n\r\ntype Props = { /* ... */ };\r\n\r\nclass Projects extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className='Projects'>\r\n        <h1>Projects. <small className='text-muted'>Think open.</small></h1>\r\n\r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            Citrus Simulator\r\n          </div>\r\n          <div className='col text-italic'>\r\n            Standalone simulator for different messaging transports.\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            Angular\r\n          </div>\r\n          <div className='col text-italic'>\r\n            One framework. Mobile & desktop.\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            TBME TV\r\n          </div>\r\n          <div className='col text-italic'>\r\n            An open source streaming application.\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-sm-2'/>\r\n          <div className='col text-muted text-italic'>\r\n            Project archived (read-only), no more supporters.\r\n          </div>\r\n        </div>\r\n\r\n        <br/>\r\n\r\n        <p>\r\n          Visit me on <a href='https://github.com/bbortt'><span className='text-github'>GitHub</span></a>. I would love to collaborate with you!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import Home from './view/Home';\r\nimport Projects from './view/Projects/Projects';\r\nimport KeyList from './view/KeyList/KeyList';\r\n\r\nexport const routes = [\r\n  {\r\n    path: '/',\r\n    component: Home\r\n  },\r\n  {\r\n    path: '/',\r\n    component: Projects\r\n  },\r\n  {\r\n    path: '/',\r\n    component: KeyList\r\n  }\r\n];\r\n","// @flow\r\nimport React, {Component} from 'react';\r\n\r\nimport * as key from '../../keys/timon_borter.asc';\r\n\r\nimport './KeyList.scss';\r\n\r\ntype Props = { /* ... */ };\r\n\r\nclass KeyList extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className='KeyList'>\r\n        <h1>Secure the internet. <small className='text-muted'>Sign your content!</small></h1>\r\n\r\n        <p>\r\n          My GPG Fingerprint: <a href={key} className='text-underline'>AD1C 31DD 0E4E CA51 8621 1131 5571 6D6C 12B6 6B41</a>.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeyList;\r\n","// @flow\r\nimport React, {Component} from 'react';\r\n\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport {routes} from './routes';\r\n\r\ntype Props = { /* ... */ };\r\n\r\nclass Router extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className='Router'>\r\n          {\r\n            routes.map((route, i) => <Route key={`route-${i}`} {...route} />)\r\n          }\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","// @flow\r\nimport React, {Component} from 'react';\r\n\r\nimport './Header.scss';\r\n\r\ntype Props = { /* ... */ };\r\n\r\nclass Header extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className='Header'>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","// @flow\r\nimport React, {Component} from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\ntype Props = { /* ... */ };\r\n\r\nclass Footer extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <footer className='Footer'>\r\n        <nav className=\"navbar navbar-dark bg-dark mt-5 fixed-bottom\">\r\n          <div className=\"m-auto navbar-text\">\r\n            Hosted on <a href='https://pages.github.com/'><span className='text-github'>GitHub <span\r\n            style={{fontWeight: 'normal'}}>Pages</span></span></a>\r\n          </div>\r\n        </nav>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","// @flow\r\nimport React, {Component} from 'react';\r\n\r\nimport Router from './Router';\r\n\r\nimport Header from './view/layout/Header/Header';\r\nimport Footer from './view/layout/Footer/Footer';\r\n\r\nimport './App.scss';\r\n\r\ntype Props = { /* ... */ };\r\n\r\nclass App extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Header/>\r\n\r\n        <div className='container'>\r\n          <Router/>\r\n        </div>\r\n\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport './index.scss';\r\nimport 'bootstrap/dist/js/bootstrap.min';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}